{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","employee","name","CardList","employees","map","id","SearchBox","placeholder","handleChange","type","onChange","App","state","employeeList","searchField","fetch","then","response","json","users","setState","this","filteredEmployee","filter","includes","className","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAEaA,EAAO,SAAAC,GAChB,OAAO,8BACH,6BAAKA,EAAMC,SAASC,UCDfC,EAAW,SAAAH,GAEpB,OACI,8BAGQA,EAAMI,UAAUC,KAAK,SAAAJ,GAAQ,OACzB,cAAC,EAAD,CAAwBA,SAAUA,GAAvBA,EAASK,UCP3BC,EAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAErC,OACI,8BACI,uBACAC,KAAK,SACLF,YAAcA,EACdG,SAAWF,OCgCRG,E,kDAnCb,WAAYZ,GAAQ,IAAD,8BACjB,cAAMA,IACDa,MAAQ,CACXC,aAAc,GACdC,YAAa,MAJE,E,qDAQnB,WAAqB,IAAD,OAClBC,MAAM,8CACLC,MAAM,SAAAC,GAAQ,OAAIA,EAASC,UAC3BF,MAAM,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEP,aAAcM,S,oBAGhD,WAAU,IAAD,SAE6BE,KAAKT,MAAlCC,EAFA,EAEAA,aAAcC,EAFd,EAEcA,YACfQ,EAAmBT,EAAaU,QAAQ,SAAAvB,GAAQ,OACpDA,EAASC,KAAKuB,SAASV,MAGzB,OACE,sBAAKW,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACElB,YAAY,kBACZC,aAAe,SAAAkB,GAAC,OAAI,EAAKN,SAAS,CAAEN,YAAaY,EAAEC,OAAOC,WAE5D,cAAC,EAAD,CAAU3B,KAAK,cAAcE,UAAYmB,W,GA9B/BO,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2f490e48.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Card = props => {\n    return <div>\n        <h2>{props.employee.name}</h2>\n    </div>\n} ","import React from 'react';\nimport {Card} from './../card/card.component';\n\nexport const CardList = props => {\n\n    return (\n        <div>\n            {/* <h1>Hello {props.name}! You can do it</h1> */}\n            {\n                props.employees.map( employee => (\n                    <Card key={employee.id} employee={employee}></Card>\n                 ) )\n            }\n        </div>\n    )\n}\n","import React from 'react';\nimport {Card} from './../card/card.component';\n\nexport const SearchBox = ({ placeholder, handleChange }) => {\n\n    return (\n        <div>\n            <input \n            type=\"search\" \n            placeholder= {placeholder} \n            onChange= {handleChange}/>\n        </div>\n    )\n}\n","import React, {Component} from 'react';\nimport './App.css';\nimport {CardList} from './components/card-list/card-list.component';\nimport {SearchBox} from './components/search-box/search-box.component';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      employeeList: [],\n      searchField: null\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then( response => response.json() )\n    .then( users => this.setState({ employeeList: users }) )\n  }\n\n  render() {\n\n    const {employeeList, searchField} = this.state ;\n    const filteredEmployee = employeeList.filter( employee =>\n      employee.name.includes(searchField)\n    )\n\n    return (\n      <div className=\"App\">\n        <h1>My employee list</h1>\n        <SearchBox\n          placeholder=\"search employee\"\n          handleChange={ e => this.setState({ searchField: e.target.value }) }\n        />\n        <CardList name=\"Bhumi Patel\" employees={ filteredEmployee }>\n        </CardList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}